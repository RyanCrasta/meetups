{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ryan/practice/react/sec-23/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport React from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nconst DUMMY_MEETUPS = [{\n  id: \"meet1\",\n  title: \"Beautiful Lake\",\n  image: \"https://images.unsplash.com/photo-1503614472-8c93d56e92ce?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1111&q=80\",\n  address: \"Moraine Lake, Canada\"\n}, {\n  id: \"meet2\",\n  title: \"Northern Lights\",\n  image: \"https://images.unsplash.com/photo-1464054313797-e27fb58e90a9?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1174&q=80\",\n  address: \"Jasper National Park, Jasper, Canada\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n} // 1st method\n// this code will run during build process\n// data fetching for pre-rendering\n\n\nexport async function getStaticProps() {\n  MongoClient.connect(\"mongodb+srv://meetmanager:ryanrocks99@cluster0.wr99p.mongodb.net/meets?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"places\");\n  const meetups = await meetupsCollection.find().toArray(); // always return object\n\n  return {\n    // this will be set as props in HomePage component\n    props: {\n      meetups\n    },\n    // number of SEC nextJS will wait until it \n    // regenerates this page for incoming req\n    // if u have not set revalidate then this page\n    // will be generated just during BUILD process\n    revalidate: 10\n  };\n} // 2nd method\n// when u want to regenerate page for every\n// incoming request use getServerSideProps\n// it will run on server after deployment\n// export function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["/home/ryan/practice/react/sec-23/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["React","MeetupList","MongoClient","DUMMY_MEETUPS","id","title","image","address","HomePage","props","meetups","getStaticProps","connect","db","client","meetupsCollection","collection","find","toArray","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,OADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,6JAJJ;AAKEC,EAAAA,OAAO,EAAE;AALX,CADoB,EAQpB;AACEH,EAAAA,EAAE,EAAE,OADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,gKAJJ;AAKEC,EAAAA,OAAO,EAAE;AALX,CARoB,CAAtB;;AAiBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AAErCT,EAAAA,WAAW,CAACU,OAAZ,CACE,oGADF;AAIA,QAAMC,EAAE,GAAGC,MAAM,CAACD,EAAP,EAAX;AAEA,QAAME,iBAAiB,GAAGF,EAAE,CAACG,UAAH,CAAc,QAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB,CAVqC,CAarC;;AACA,SAAO;AACL;AACAT,IAAAA,KAAK,EAAE;AACLC,MAAAA;AADK,KAFF;AAML;AACA;AACA;AACA;AACAS,IAAAA,UAAU,EAAE;AAVP,GAAP;AAYD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\n\nconst DUMMY_MEETUPS = [\n  {\n    id: \"meet1\",\n    title: \"Beautiful Lake\",\n    image:\n      \"https://images.unsplash.com/photo-1503614472-8c93d56e92ce?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1111&q=80\",\n    address: \"Moraine Lake, Canada\",\n  },\n  {\n    id: \"meet2\",\n    title: \"Northern Lights\",\n    image:\n      \"https://images.unsplash.com/photo-1464054313797-e27fb58e90a9?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1174&q=80\",\n    address: \"Jasper National Park, Jasper, Canada\",\n  },\n];\n\nfunction HomePage(props) {\n  return <MeetupList meetups={props.meetups} />;\n}\n\n// 1st method\n// this code will run during build process\n// data fetching for pre-rendering\nexport async function getStaticProps() {\n\n  MongoClient.connect(\n    \"mongodb+srv://meetmanager:ryanrocks99@cluster0.wr99p.mongodb.net/meets?retryWrites=true&w=majority\"\n  )\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"places\");\n\n  const meetups = await meetupsCollection.find().toArray()\n\n\n  // always return object\n  return {\n    // this will be set as props in HomePage component\n    props: {\n      meetups,\n    },\n\n    // number of SEC nextJS will wait until it \n    // regenerates this page for incoming req\n    // if u have not set revalidate then this page\n    // will be generated just during BUILD process\n    revalidate: 10\n  };\n}\n\n// 2nd method\n// when u want to regenerate page for every\n// incoming request use getServerSideProps\n// it will run on server after deployment\n\n// export function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}