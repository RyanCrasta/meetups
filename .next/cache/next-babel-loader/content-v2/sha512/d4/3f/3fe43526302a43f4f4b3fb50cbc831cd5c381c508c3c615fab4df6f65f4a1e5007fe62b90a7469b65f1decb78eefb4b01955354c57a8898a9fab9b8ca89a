{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ryan/practice/react/sec-23/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js\";\nimport React from \"react\";\nimport MeetUpDetail from \"../components/meetups/MeetUpDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction MeetUpDetails(props) {\n  console.log('PROPS', props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n      imgSource: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // use if using getStaticProps in DYNAMIC page\n\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://meetmanager:ryanrocks99@cluster0.wr99p.mongodb.net/meets?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"places\"); // to ONLY include _id\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    // if false ur paths contains all supported meetUpId value\n    // false will show 404 if page not found\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // paths: [\n    //   {\n    //     params: {\n    //       meetupId: \"meet1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"meet2\",\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetupId;\n  console.log(\"%%%%\", meetUpId);\n  console.log(\"RYAAAAAAAAAAN\");\n  const client = await MongoClient.connect(\"mongodb+srv://meetmanager:ryanrocks99@cluster0.wr99p.mongodb.net/meets?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"places\");\n  const selectedMeetups = await meetupsCollection.findOne({\n    _id: ObjectId(meetUpId)\n  });\n  client.close();\n  console.log('SPECIFIC', selectedMeetups);\n  return {\n    props: {\n      meetupData: {\n        selectedMeetups\n      }\n    },\n    revalidate: 10\n  };\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["/home/ryan/practice/react/sec-23/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js"],"names":["React","MeetUpDetail","MongoClient","ObjectId","MeetUpDetails","props","console","log","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetUpId","selectedMeetups","findOne","revalidate"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;AACA,sBACE;AAAA,2BACE,QAAC,YAAD;AAEA,MAAA,SAAS,EAAIA,KAAK,CAACG,UAAN,CAAiBC,KAF9B;AAGE,MAAA,KAAK,EAAEJ,KAAK,CAACG,UAAN,CAAiBE,KAH1B;AAIE,MAAA,OAAO,EAAEL,KAAK,CAACG,UAAN,CAAiBG,OAJ5B;AAKE,MAAA,WAAW,EAAEN,KAAK,CAACG,UAAN,CAAiBI;AALhC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,C,CAED;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,oGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAA1B,CAPqC,CASrC;;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACL;AACA;AACAC,IAAAA,QAAQ,EAAE,KAHL;AAKLC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC5BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADoB,KAAL,CAAlB,CALF,CAUL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArBK,GAAP;AAuBD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAvB,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB0B,QAApB;AACA3B,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEA,QAAMO,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,oGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAA1B;AAGA,QAAMgB,eAAe,GAAG,MAAMjB,iBAAiB,CAACkB,OAAlB,CAA0B;AACtDd,IAAAA,GAAG,EAAGlB,QAAQ,CAAC8B,QAAD;AADwC,GAA1B,CAA9B;AAIAnB,EAAAA,MAAM,CAACS,KAAP;AAEAjB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB2B,eAAxB;AACA,SAAO;AACL7B,IAAAA,KAAK,EAAE;AACLG,MAAAA,UAAU,EAAE;AACV0B,QAAAA;AADU;AADP,KADF;AAMLE,IAAAA,UAAU,EAAE;AANP,GAAP;AAQD;AAED,eAAehC,aAAf","sourcesContent":["import React from \"react\";\nimport MeetUpDetail from \"../components/meetups/MeetUpDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction MeetUpDetails(props) {\n  console.log('PROPS',props)\n  return (\n    <>\n      <MeetUpDetail \n      \n      imgSource = {props.meetupData.image}\n        title={props.meetupData.title}\n        address={props.meetupData.address}\n        description={props.meetupData.description}\n      />\n    </>\n  );\n}\n\n// use if using getStaticProps in DYNAMIC page\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://meetmanager:ryanrocks99@cluster0.wr99p.mongodb.net/meets?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"places\");\n\n  // to ONLY include _id\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    // if false ur paths contains all supported meetUpId value\n    // false will show 404 if page not found\n    fallback: false,\n\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n    // paths: [\n    //   {\n    //     params: {\n    //       meetupId: \"meet1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"meet2\",\n    //     },\n    //   },\n    // ],\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetUpId = context.params.meetupId;\n  console.log(\"%%%%\", meetUpId);\n  console.log(\"RYAAAAAAAAAAN\");\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://meetmanager:ryanrocks99@cluster0.wr99p.mongodb.net/meets?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"places\");\n\n\n  const selectedMeetups = await meetupsCollection.findOne({\n    _id:  ObjectId(meetUpId)\n  });\n\n  client.close();\n\n  console.log('SPECIFIC', selectedMeetups)\n  return {\n    props: {\n      meetupData: {\n        selectedMeetups\n      },\n    },\n    revalidate: 10,\n  };\n}\n\nexport default MeetUpDetails;\n"]},"metadata":{},"sourceType":"module"}